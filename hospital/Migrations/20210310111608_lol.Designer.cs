// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hospital.model;

namespace hospital.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20210310111608_lol")]
    partial class lol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("hospital.model.AEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("LAST_NAME");

                    b.Property<int>("Salary")
                        .HasColumnType("INT")
                        .HasColumnName("SALARY");

                    b.Property<int>("Svnr")
                        .HasColumnType("int")
                        .HasColumnName("SVNR");

                    b.HasKey("Id");

                    b.HasIndex("Svnr")
                        .IsUnique();

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("hospital.model.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FACILITY_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("PHONE_NR");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PhoneNr")
                        .IsUnique();

                    b.ToTable("HOSPITAL_FACILITIES");
                });

            modelBuilder.Entity("hospital.model.Occupation", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<int>("WardId")
                        .HasColumnType("int")
                        .HasColumnName("WARD_ID");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("INT")
                        .HasColumnName("WORKING_HOURS");

                    b.HasKey("EmployeeId", "WardId");

                    b.HasIndex("WardId");

                    b.ToTable("OCCUPATIONS");
                });

            modelBuilder.Entity("hospital.model.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WARD_ID");

                    b.Property<int>("CarryingCapacity")
                        .HasColumnType("INT")
                        .HasColumnName("CARRING_CAPACITY");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int")
                        .HasColumnName("FACILITY_ID");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("MANAGER_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("WARDS");
                });

            modelBuilder.Entity("hospital.model.Caretaker", b =>
                {
                    b.HasBaseType("hospital.model.AEmployee");

                    b.Property<int?>("SuperiorId")
                        .HasColumnType("int")
                        .HasColumnName("SUPERIOR_ID");

                    b.HasIndex("SuperiorId");

                    b.ToTable("CARETAKER");
                });

            modelBuilder.Entity("hospital.model.Physician", b =>
                {
                    b.HasBaseType("hospital.model.AEmployee");

                    b.Property<string>("JobSpecialisation")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("JOB_SPECIFICATION");

                    b.ToTable("PHYSICANS");
                });

            modelBuilder.Entity("hospital.model.Occupation", b =>
                {
                    b.HasOne("hospital.model.AEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hospital.model.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("hospital.model.Ward", b =>
                {
                    b.HasOne("hospital.model.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hospital.model.Physician", "Manager")
                        .WithOne()
                        .HasForeignKey("hospital.model.Ward", "ManagerId");

                    b.Navigation("Facility");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("hospital.model.Caretaker", b =>
                {
                    b.HasOne("hospital.model.AEmployee", null)
                        .WithOne()
                        .HasForeignKey("hospital.model.Caretaker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hospital.model.Caretaker", "Superior")
                        .WithMany()
                        .HasForeignKey("SuperiorId");

                    b.Navigation("Superior");
                });

            modelBuilder.Entity("hospital.model.Physician", b =>
                {
                    b.HasOne("hospital.model.AEmployee", null)
                        .WithOne()
                        .HasForeignKey("hospital.model.Physician", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
